// <auto-generated />
using System;
using ActiviGoApi.Infrastructur.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ActiviGoApi.Infrastructur.Migrations
{
    [DbContext(typeof(ToadContext))]
    [Migration("20251009081930_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActiviGoApi.Core.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<string>("IMGUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Intense full-body workout to start your day",
                            DurationInMinutes = 45,
                            IMGUrl = "https://cdn.example.com/act1.jpg",
                            IsActive = true,
                            Name = "Morning Bootcamp",
                            Price = 12.50m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Gentle Vinyasa to wake the body",
                            DurationInMinutes = 60,
                            IMGUrl = "https://cdn.example.com/act2.jpg",
                            IsActive = true,
                            Name = "Sunrise Yoga",
                            Price = 10.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Urban choreography for all levels",
                            DurationInMinutes = 50,
                            IMGUrl = "https://cdn.example.com/act3.jpg",
                            IsActive = true,
                            Name = "Hip Hop Dance",
                            Price = 11.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Intro to basic strikes and stances",
                            DurationInMinutes = 60,
                            IMGUrl = "https://cdn.example.com/act4.jpg",
                            IsActive = true,
                            Name = "Beginner Karate",
                            Price = 15.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Technique and endurance laps",
                            DurationInMinutes = 30,
                            IMGUrl = "https://cdn.example.com/act5.jpg",
                            IsActive = true,
                            Name = "Lap Swimming",
                            Price = 8.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "High-energy indoor cycling",
                            DurationInMinutes = 45,
                            IMGUrl = "https://cdn.example.com/act6.jpg",
                            IsActive = true,
                            Name = "Spin Class",
                            Price = 13.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Belay and lead techniques",
                            DurationInMinutes = 90,
                            IMGUrl = "https://cdn.example.com/act7.jpg",
                            IsActive = true,
                            Name = "Top Rope Climbing",
                            Price = 20.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Skill drills and small-sided games",
                            DurationInMinutes = 75,
                            IMGUrl = "https://cdn.example.com/act8.jpg",
                            IsActive = true,
                            Name = "Soccer Practice",
                            Price = 9.50m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Speed intervals on the track",
                            DurationInMinutes = 40,
                            IMGUrl = "https://cdn.example.com/act9.jpg",
                            IsActive = true,
                            Name = "Interval Running",
                            Price = 7.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Core stability and breath work",
                            DurationInMinutes = 50,
                            IMGUrl = "https://cdn.example.com/act10.jpg",
                            IsActive = true,
                            Name = "Pilates Mat",
                            Price = 11.50m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 11,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Footwork, guard and combos",
                            DurationInMinutes = 55,
                            IMGUrl = "https://cdn.example.com/act11.jpg",
                            IsActive = true,
                            Name = "Boxing Basics",
                            Price = 14.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 12,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Scaled CrossFit workout of the day",
                            DurationInMinutes = 60,
                            IMGUrl = "https://cdn.example.com/act12.jpg",
                            IsActive = true,
                            Name = "WOD - Beginner",
                            Price = 16.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 19,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Basic gymnastics for children",
                            DurationInMinutes = 45,
                            IMGUrl = "https://cdn.example.com/act13.jpg",
                            IsActive = true,
                            Name = "Kids Gym",
                            Price = 8.50m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 14,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Technique and endurance on erg",
                            DurationInMinutes = 30,
                            IMGUrl = "https://cdn.example.com/act14.jpg",
                            IsActive = true,
                            Name = "Indoor Rowing",
                            Price = 9.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 15,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Strength for off-road skiing and trekking",
                            DurationInMinutes = 60,
                            IMGUrl = "https://cdn.example.com/act15.jpg",
                            IsActive = true,
                            Name = "Trail Prep",
                            Price = 10.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 16,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Introduction to recurve bow handling",
                            DurationInMinutes = 60,
                            IMGUrl = "https://cdn.example.com/act16.jpg",
                            IsActive = true,
                            Name = "Archery Basics",
                            Price = 18.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 17,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Guided day hikes for mixed groups",
                            DurationInMinutes = 300,
                            IMGUrl = "https://cdn.example.com/act17.jpg",
                            IsActive = true,
                            Name = "Hiking Meetup",
                            Price = 25.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 18,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Joint health and functional movement",
                            DurationInMinutes = 40,
                            IMGUrl = "https://cdn.example.com/act18.jpg",
                            IsActive = true,
                            Name = "Mobility Class",
                            Price = 9.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 13,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Apparatus and tumbling skills",
                            DurationInMinutes = 90,
                            IMGUrl = "https://cdn.example.com/act19.jpg",
                            IsActive = true,
                            Name = "Advanced Gymnastics",
                            Price = 22.00m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 20,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Low impact balance and coordination",
                            DurationInMinutes = 45,
                            IMGUrl = "https://cdn.example.com/act20.jpg",
                            IsActive = true,
                            Name = "Senior Balance",
                            Price = 7.50m,
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.ActivityOccurence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("AvailableSpots")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("SubLocationId");

                    b.ToTable("ActivityOccurences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivityId = 1,
                            AvailableSpots = 20,
                            Capacity = 20,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 10, 9, 0, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 1,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            ActivityId = 2,
                            AvailableSpots = 15,
                            Capacity = 15,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 11, 7, 0, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 11, 6, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 6,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            ActivityId = 3,
                            AvailableSpots = 25,
                            Capacity = 25,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 12, 19, 30, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 12, 18, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 3,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            ActivityId = 4,
                            AvailableSpots = 30,
                            Capacity = 30,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 13, 18, 0, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 13, 17, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 4,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            ActivityId = 5,
                            AvailableSpots = 12,
                            Capacity = 12,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 14, 7, 30, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 14, 7, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 5,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            ActivityId = 6,
                            AvailableSpots = 22,
                            Capacity = 22,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 15, 20, 0, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 15, 19, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 8,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            ActivityId = 7,
                            AvailableSpots = 10,
                            Capacity = 10,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 16, 15, 30, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 16, 14, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 7,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            ActivityId = 8,
                            AvailableSpots = 40,
                            Capacity = 40,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 17, 17, 15, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 17, 16, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 1,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            ActivityId = 9,
                            AvailableSpots = 18,
                            Capacity = 18,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 18, 6, 40, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 18, 6, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 11,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            ActivityId = 10,
                            AvailableSpots = 16,
                            Capacity = 16,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 19, 13, 0, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 19, 12, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 10,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            ActivityId = 11,
                            AvailableSpots = 20,
                            Capacity = 20,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 20, 19, 0, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 20, 18, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 12,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            ActivityId = 12,
                            AvailableSpots = 24,
                            Capacity = 24,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 21, 9, 0, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 21, 8, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 8,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            ActivityId = 13,
                            AvailableSpots = 30,
                            Capacity = 30,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 22, 16, 0, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 22, 15, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 13,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            ActivityId = 14,
                            AvailableSpots = 14,
                            Capacity = 14,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 23, 17, 30, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 23, 17, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 14,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            ActivityId = 15,
                            AvailableSpots = 28,
                            Capacity = 28,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 24, 11, 0, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 24, 10, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 15,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            ActivityId = 16,
                            AvailableSpots = 12,
                            Capacity = 12,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 25, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 25, 13, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 16,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            ActivityId = 17,
                            AvailableSpots = 40,
                            Capacity = 40,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 26, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 26, 9, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 19,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            ActivityId = 18,
                            AvailableSpots = 18,
                            Capacity = 18,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 27, 11, 40, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 27, 11, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 17,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            ActivityId = 19,
                            AvailableSpots = 35,
                            Capacity = 35,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 28, 17, 30, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 28, 16, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 18,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 20,
                            ActivityId = 20,
                            AvailableSpots = 16,
                            Capacity = 16,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndTime = new DateTime(2025, 10, 29, 10, 45, 0, 0, DateTimeKind.Utc),
                            IsCancelled = false,
                            StartTime = new DateTime(2025, 10, 29, 10, 0, 0, 0, DateTimeKind.Utc),
                            SubLocationId = 20,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityOccurenceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int>("Participants")
                        .HasColumnType("int");

                    b.Property<bool>("ParticipationConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityOccurenceId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivityOccurenceId = 1,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = true,
                            Participants = 1,
                            ParticipationConfirmed = true,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-0001-4a1a-8000-000000000001"
                        },
                        new
                        {
                            Id = 2,
                            ActivityOccurenceId = 2,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = false,
                            Participants = 2,
                            ParticipationConfirmed = false,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-0002-4a1a-8000-000000000002"
                        },
                        new
                        {
                            Id = 3,
                            ActivityOccurenceId = 3,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = true,
                            Participants = 1,
                            ParticipationConfirmed = true,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-0003-4a1a-8000-000000000003"
                        },
                        new
                        {
                            Id = 4,
                            ActivityOccurenceId = 4,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = false,
                            Participants = 3,
                            ParticipationConfirmed = false,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-0004-4a1a-8000-000000000004"
                        },
                        new
                        {
                            Id = 5,
                            ActivityOccurenceId = 5,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = true,
                            Participants = 1,
                            ParticipationConfirmed = true,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-0005-4a1a-8000-000000000005"
                        },
                        new
                        {
                            Id = 6,
                            ActivityOccurenceId = 6,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = true,
                            Participants = 2,
                            ParticipationConfirmed = true,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-0006-4a1a-8000-000000000006"
                        },
                        new
                        {
                            Id = 7,
                            ActivityOccurenceId = 7,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = false,
                            Participants = 1,
                            ParticipationConfirmed = false,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-0007-4a1a-8000-000000000007"
                        },
                        new
                        {
                            Id = 8,
                            ActivityOccurenceId = 8,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = true,
                            Participants = 4,
                            ParticipationConfirmed = true,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-0008-4a1a-8000-000000000008"
                        },
                        new
                        {
                            Id = 9,
                            ActivityOccurenceId = 9,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = false,
                            Participants = 2,
                            ParticipationConfirmed = false,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-0009-4a1a-8000-000000000009"
                        },
                        new
                        {
                            Id = 10,
                            ActivityOccurenceId = 10,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = true,
                            Participants = 1,
                            ParticipationConfirmed = true,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-000a-4a1a-8000-00000000000a"
                        },
                        new
                        {
                            Id = 11,
                            ActivityOccurenceId = 11,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = true,
                            Participants = 2,
                            ParticipationConfirmed = true,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-000b-4a1a-8000-00000000000b"
                        },
                        new
                        {
                            Id = 12,
                            ActivityOccurenceId = 12,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = false,
                            Participants = 3,
                            ParticipationConfirmed = false,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-000c-4a1a-8000-00000000000c"
                        },
                        new
                        {
                            Id = 13,
                            ActivityOccurenceId = 13,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = true,
                            Participants = 1,
                            ParticipationConfirmed = true,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-000d-4a1a-8000-00000000000d"
                        },
                        new
                        {
                            Id = 14,
                            ActivityOccurenceId = 14,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = false,
                            Participants = 2,
                            ParticipationConfirmed = false,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-000e-4a1a-8000-00000000000e"
                        },
                        new
                        {
                            Id = 15,
                            ActivityOccurenceId = 15,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = true,
                            Participants = 3,
                            ParticipationConfirmed = true,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-000f-4a1a-8000-00000000000f"
                        },
                        new
                        {
                            Id = 16,
                            ActivityOccurenceId = 16,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = true,
                            Participants = 1,
                            ParticipationConfirmed = true,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-0010-4a1a-8000-000000000010"
                        },
                        new
                        {
                            Id = 17,
                            ActivityOccurenceId = 17,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = false,
                            Participants = 5,
                            ParticipationConfirmed = false,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-0011-4a1a-8000-000000000011"
                        },
                        new
                        {
                            Id = 18,
                            ActivityOccurenceId = 18,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = true,
                            Participants = 1,
                            ParticipationConfirmed = true,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-0012-4a1a-8000-000000000012"
                        },
                        new
                        {
                            Id = 19,
                            ActivityOccurenceId = 19,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = true,
                            Participants = 2,
                            ParticipationConfirmed = true,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-0013-4a1a-8000-000000000013"
                        },
                        new
                        {
                            Id = 20,
                            ActivityOccurenceId = 20,
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsCancelled = false,
                            IsPaid = false,
                            Participants = 1,
                            ParticipationConfirmed = false,
                            UpdatedAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "b1f4f730-0014-4a1a-8000-000000000014"
                        });
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Strength and conditioning classes",
                            Name = "Fitness",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Mindfulness and flexibility sessions",
                            Name = "Yoga",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Various dance styles and choreography",
                            Name = "Dance",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Combat sports and self-defense",
                            Name = "Martial Arts",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Pool-based training and technique",
                            Name = "Swimming",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Indoor cycling classes and outdoor rides",
                            Name = "Cycling",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Bouldering and rope climbing instruction",
                            Name = "Climbing",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Organized team training (soccer, basketball)",
                            Name = "Team Sports",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Technique, intervals and endurance runs",
                            Name = "Running",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Core and posture improvement",
                            Name = "Pilates",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Pad work, sparring and conditioning",
                            Name = "Boxing",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "High-intensity functional training",
                            Name = "CrossFit",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Floor, rings, bars and flexibility",
                            Name = "Gymnastics",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Indoor rowing technique and workouts",
                            Name = "Rowing",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Off-season training and technique",
                            Name = "Skiing",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Archery and target practice sessions",
                            Name = "Shooting",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Hiking, trekking and outdoor skills",
                            Name = "Outdoor",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Recovery, mobility and guided relaxation",
                            Name = "Wellness",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Child-focused activities and classes",
                            Name = "Kids",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Low-impact sessions for older adults",
                            Name = "Senior",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "1 Central Park Way",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Large public park with open fields",
                            IsActive = true,
                            Latitude = "40.785091",
                            Longitude = "-73.968285",
                            Name = "Central Park",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            Adress = "2 Riverside Ave",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Riverside recreational area",
                            IsActive = true,
                            Latitude = "40.800000",
                            Longitude = "-73.970000",
                            Name = "Riverside Grounds",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            Adress = "3 Harbor Rd",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Coastal facility with views of the harbor",
                            IsActive = true,
                            Latitude = "40.700000",
                            Longitude = "-74.010000",
                            Name = "Harbor View",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            Adress = "4 North End Ln",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Community sports complex",
                            IsActive = true,
                            Latitude = "40.820000",
                            Longitude = "-73.950000",
                            Name = "North End Complex",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            Adress = "5 South Gate Blvd",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Southern parkland with trails",
                            IsActive = true,
                            Latitude = "40.760000",
                            Longitude = "-73.980000",
                            Name = "South Gate Park",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            Adress = "6 East Point St",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "East-side activity center",
                            IsActive = true,
                            Latitude = "40.770000",
                            Longitude = "-73.930000",
                            Name = "East Point Center",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            Adress = "7 West Field Dr",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Outdoor fields and courts",
                            IsActive = true,
                            Latitude = "40.740000",
                            Longitude = "-73.990000",
                            Name = "West Field Grounds",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            Adress = "8 City Center Pl",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Indoor arena in city center",
                            IsActive = true,
                            Latitude = "40.712776",
                            Longitude = "-74.005974",
                            Name = "City Center Arena",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            Adress = "9 Lakeside Rd",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Venue by the lake",
                            IsActive = true,
                            Latitude = "40.750000",
                            Longitude = "-74.000000",
                            Name = "Lakeside Venue",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            Adress = "10 Old Town Sq",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Converted town hall used for activities",
                            IsActive = true,
                            Latitude = "40.730610",
                            Longitude = "-73.935242",
                            Name = "Old Town Hall",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            Adress = "11 Meadow Ln",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Meadow with event lawns",
                            IsActive = true,
                            Latitude = "40.760500",
                            Longitude = "-73.982000",
                            Name = "Green Meadow",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            Adress = "12 Highlands Ave",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Highland area with courts and gym",
                            IsActive = true,
                            Latitude = "40.780000",
                            Longitude = "-73.960000",
                            Name = "Highlands Sports",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            Adress = "13 Sunset Blvd",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Plaza suitable for classes and markets",
                            IsActive = true,
                            Latitude = "40.710000",
                            Longitude = "-74.015000",
                            Name = "Sunset Plaza",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            Adress = "14 Mountain Rd",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Base facility near small hills",
                            IsActive = true,
                            Latitude = "40.850000",
                            Longitude = "-73.880000",
                            Name = "Mountain Base",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            Adress = "15 Valley St",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Community hub in the valley",
                            IsActive = true,
                            Latitude = "40.690000",
                            Longitude = "-74.020000",
                            Name = "Valley Hub",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            Adress = "16 Seafront Ave",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Seafront with promenade",
                            IsActive = true,
                            Latitude = "40.700500",
                            Longitude = "-74.012000",
                            Name = "Seafront Deck",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            Adress = "17 Meadow Park Ln",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Small park with playground",
                            IsActive = true,
                            Latitude = "40.755000",
                            Longitude = "-73.987000",
                            Name = "Meadow Park",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            Adress = "18 Station Sq",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Square adjacent to main station",
                            IsActive = true,
                            Latitude = "40.752726",
                            Longitude = "-73.977229",
                            Name = "Station Square",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            Adress = "19 Festival Grounds",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Large open area used for events",
                            IsActive = true,
                            Latitude = "40.748000",
                            Longitude = "-73.985500",
                            Name = "Festival Grounds",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 20,
                            Adress = "20 Civic Plaza",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Plaza in front of civic buildings",
                            IsActive = true,
                            Latitude = "40.741000",
                            Longitude = "-73.989000",
                            Name = "Civic Plaza",
                            UpdatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.SubLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Indoors")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("SubLocations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Main arena at Central Park",
                            Indoors = false,
                            LocationId = 1,
                            MaxCapacity = 200,
                            Name = "Arena A1",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Riverside multipurpose court",
                            Indoors = false,
                            LocationId = 2,
                            MaxCapacity = 60,
                            Name = "Court R2",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Indoor gym at Harbor View",
                            Indoors = true,
                            LocationId = 3,
                            MaxCapacity = 80,
                            Name = "Harbor Gym",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Large indoor hall for events",
                            Indoors = true,
                            LocationId = 4,
                            MaxCapacity = 150,
                            Name = "North Hall",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Outdoor field for sports",
                            Indoors = false,
                            LocationId = 5,
                            MaxCapacity = 120,
                            Name = "South Field",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Small studio for classes",
                            Indoors = true,
                            LocationId = 6,
                            MaxCapacity = 20,
                            Name = "East Studio",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "West Field indoor court 1",
                            Indoors = true,
                            LocationId = 7,
                            MaxCapacity = 60,
                            Name = "West Court 1",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Indoor arena for tournaments",
                            Indoors = true,
                            LocationId = 8,
                            MaxCapacity = 500,
                            Name = "City Arena",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Open deck near lake",
                            Indoors = false,
                            LocationId = 9,
                            MaxCapacity = 50,
                            Name = "Lakeside Deck",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Community studio in Old Town Hall",
                            Indoors = true,
                            LocationId = 10,
                            MaxCapacity = 30,
                            Name = "Old Hall Studio",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Seasonal arena on the meadow",
                            Indoors = false,
                            LocationId = 11,
                            MaxCapacity = 220,
                            Name = "Green Meadow Arena",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Outdoor courts at Highlands",
                            Indoors = false,
                            LocationId = 12,
                            MaxCapacity = 80,
                            Name = "Highlands Court",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Open stage for classes and events",
                            Indoors = false,
                            LocationId = 13,
                            MaxCapacity = 100,
                            Name = "Sunset Plaza Stage",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Training gym at Mountain Base",
                            Indoors = true,
                            LocationId = 14,
                            MaxCapacity = 60,
                            Name = "Mountain Gym",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Community hall in Valley Hub",
                            Indoors = true,
                            LocationId = 15,
                            MaxCapacity = 140,
                            Name = "Valley Hall",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Outdoor seafront court",
                            Indoors = false,
                            LocationId = 16,
                            MaxCapacity = 70,
                            Name = "Seafront Court",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Small studio by the meadow",
                            Indoors = true,
                            LocationId = 17,
                            MaxCapacity = 25,
                            Name = "Meadow Studio",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Arena adjacent to station",
                            Indoors = false,
                            LocationId = 18,
                            MaxCapacity = 180,
                            Name = "Station Square Arena",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Big open festival field",
                            Indoors = false,
                            LocationId = 19,
                            MaxCapacity = 1000,
                            Name = "Festival Field",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Gym inside civic plaza building",
                            Indoors = true,
                            LocationId = 20,
                            MaxCapacity = 90,
                            Name = "Civic Gym",
                            UpdatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "b1f4f730-0001-4a1a-8000-000000000001",
                            AccessFailedCount = 0,
                            Address = "1 Park Lane",
                            ConcurrencyStamp = "35d2a734-8554-4a11-b949-11c275cd1d0f",
                            DateOfBirth = new DateTime(1990, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice@example.com",
                            EmailConfirmed = true,
                            FirstName = "Alice",
                            IsSuspended = false,
                            LastName = "Andersson",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALICE@EXAMPLE.COM",
                            NormalizedUserName = "ALICE@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9dc4a4da-1269-4b8a-9753-7d8047fb374d",
                            TwoFactorEnabled = false,
                            UserName = "alice@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-0002-4a1a-8000-000000000002",
                            AccessFailedCount = 0,
                            Address = "2 River Rd",
                            ConcurrencyStamp = "6de23b99-0302-40b8-8392-66541d3a9bd6",
                            DateOfBirth = new DateTime(1985, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob@example.com",
                            EmailConfirmed = true,
                            FirstName = "Bob",
                            IsSuspended = false,
                            LastName = "Brown",
                            LockoutEnabled = false,
                            NormalizedEmail = "BOB@EXAMPLE.COM",
                            NormalizedUserName = "BOB@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "033af989-1d12-4bdd-ad88-7fc89c59cb20",
                            TwoFactorEnabled = false,
                            UserName = "bob@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-0003-4a1a-8000-000000000003",
                            AccessFailedCount = 0,
                            Address = "3 Harbor St",
                            ConcurrencyStamp = "20e7fb16-7843-4efe-9632-f36847907076",
                            DateOfBirth = new DateTime(1992, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carol@example.com",
                            EmailConfirmed = true,
                            FirstName = "Carol",
                            IsSuspended = false,
                            LastName = "Carlson",
                            LockoutEnabled = false,
                            NormalizedEmail = "CAROL@EXAMPLE.COM",
                            NormalizedUserName = "CAROL@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "74812eb0-3854-406d-b00e-ed15192d4f46",
                            TwoFactorEnabled = false,
                            UserName = "carol@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-0004-4a1a-8000-000000000004",
                            AccessFailedCount = 0,
                            Address = "4 North Ave",
                            ConcurrencyStamp = "9041b7ef-5b75-4a16-b2df-e03545e612d9",
                            DateOfBirth = new DateTime(1988, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dan@example.com",
                            EmailConfirmed = true,
                            FirstName = "Dan",
                            IsSuspended = false,
                            LastName = "Davis",
                            LockoutEnabled = false,
                            NormalizedEmail = "DAN@EXAMPLE.COM",
                            NormalizedUserName = "DAN@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "809b4ed9-77c9-401c-b532-4f6ebef2b384",
                            TwoFactorEnabled = false,
                            UserName = "dan@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-0005-4a1a-8000-000000000005",
                            AccessFailedCount = 0,
                            Address = "5 South Gate",
                            ConcurrencyStamp = "58a1d668-6aee-4bb6-a859-8f08e882ff8e",
                            DateOfBirth = new DateTime(1995, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "eva@example.com",
                            EmailConfirmed = true,
                            FirstName = "Eva",
                            IsSuspended = false,
                            LastName = "Eriksson",
                            LockoutEnabled = false,
                            NormalizedEmail = "EVA@EXAMPLE.COM",
                            NormalizedUserName = "EVA@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b000f285-3b8f-41ac-8a96-5e0af5ccfedb",
                            TwoFactorEnabled = false,
                            UserName = "eva@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-0006-4a1a-8000-000000000006",
                            AccessFailedCount = 0,
                            Address = "6 East Point",
                            ConcurrencyStamp = "78131727-b97c-4754-8afc-d4462905d65d",
                            DateOfBirth = new DateTime(1979, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fred@example.com",
                            EmailConfirmed = true,
                            FirstName = "Fred",
                            IsSuspended = false,
                            LastName = "Fischer",
                            LockoutEnabled = false,
                            NormalizedEmail = "FRED@EXAMPLE.COM",
                            NormalizedUserName = "FRED@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8fce4dce-8586-4e71-9bb4-e3f65dd6678a",
                            TwoFactorEnabled = false,
                            UserName = "fred@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-0007-4a1a-8000-000000000007",
                            AccessFailedCount = 0,
                            Address = "7 West Field",
                            ConcurrencyStamp = "5a20527e-4bb1-4375-8531-bb49084f76a6",
                            DateOfBirth = new DateTime(1982, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gina@example.com",
                            EmailConfirmed = true,
                            FirstName = "Gina",
                            IsSuspended = false,
                            LastName = "Gustav",
                            LockoutEnabled = false,
                            NormalizedEmail = "GINA@EXAMPLE.COM",
                            NormalizedUserName = "GINA@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4085c573-3fd9-43b5-8bb6-682236190224",
                            TwoFactorEnabled = false,
                            UserName = "gina@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-0008-4a1a-8000-000000000008",
                            AccessFailedCount = 0,
                            Address = "8 City Center",
                            ConcurrencyStamp = "d13b385d-109d-4082-8df9-4ed14347095a",
                            DateOfBirth = new DateTime(1991, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "harry@example.com",
                            EmailConfirmed = true,
                            FirstName = "Harry",
                            IsSuspended = false,
                            LastName = "Hansen",
                            LockoutEnabled = false,
                            NormalizedEmail = "HARRY@EXAMPLE.COM",
                            NormalizedUserName = "HARRY@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a54360ef-3afb-4182-ada6-52ea6d03dffc",
                            TwoFactorEnabled = false,
                            UserName = "harry@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-0009-4a1a-8000-000000000009",
                            AccessFailedCount = 0,
                            Address = "9 Lakeside",
                            ConcurrencyStamp = "78a38fb0-9686-45fb-b788-80df4894ead1",
                            DateOfBirth = new DateTime(1993, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "irene@example.com",
                            EmailConfirmed = true,
                            FirstName = "Irene",
                            IsSuspended = false,
                            LastName = "Iverson",
                            LockoutEnabled = false,
                            NormalizedEmail = "IRENE@EXAMPLE.COM",
                            NormalizedUserName = "IRENE@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "024f1d3b-bed0-4e26-8569-b423ffa9d9d8",
                            TwoFactorEnabled = false,
                            UserName = "irene@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-000a-4a1a-8000-00000000000a",
                            AccessFailedCount = 0,
                            Address = "10 Old Town",
                            ConcurrencyStamp = "18e4302d-6a7d-4b92-864f-f743994b5e31",
                            DateOfBirth = new DateTime(1975, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john@example.com",
                            EmailConfirmed = true,
                            FirstName = "John",
                            IsSuspended = false,
                            LastName = "Johnson",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHN@EXAMPLE.COM",
                            NormalizedUserName = "JOHN@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "29e885b7-144a-4398-bebc-f4f3e3c9ea26",
                            TwoFactorEnabled = false,
                            UserName = "john@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-000b-4a1a-8000-00000000000b",
                            AccessFailedCount = 0,
                            Address = "11 Green Meadow",
                            ConcurrencyStamp = "f91d75bf-f818-4980-b9e0-0d0aa2aa1b4e",
                            DateOfBirth = new DateTime(1987, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "kate@example.com",
                            EmailConfirmed = true,
                            FirstName = "Kate",
                            IsSuspended = false,
                            LastName = "Karlsson",
                            LockoutEnabled = false,
                            NormalizedEmail = "KATE@EXAMPLE.COM",
                            NormalizedUserName = "KATE@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "395fd560-954a-4315-addf-981392092e39",
                            TwoFactorEnabled = false,
                            UserName = "kate@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-000c-4a1a-8000-00000000000c",
                            AccessFailedCount = 0,
                            Address = "12 Highlands",
                            ConcurrencyStamp = "c46197e0-134b-4a63-969e-0c50d0a4ef5a",
                            DateOfBirth = new DateTime(1996, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "liam@example.com",
                            EmailConfirmed = true,
                            FirstName = "Liam",
                            IsSuspended = false,
                            LastName = "Larsson",
                            LockoutEnabled = false,
                            NormalizedEmail = "LIAM@EXAMPLE.COM",
                            NormalizedUserName = "LIAM@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f1f6bcd8-2519-41f5-9657-2b51116d8485",
                            TwoFactorEnabled = false,
                            UserName = "liam@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-000d-4a1a-8000-00000000000d",
                            AccessFailedCount = 0,
                            Address = "13 Sunset Plaza",
                            ConcurrencyStamp = "67cc4b20-3338-4d13-8951-de8aa1be6aa1",
                            DateOfBirth = new DateTime(1994, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mia@example.com",
                            EmailConfirmed = true,
                            FirstName = "Mia",
                            IsSuspended = false,
                            LastName = "Mårtensson",
                            LockoutEnabled = false,
                            NormalizedEmail = "MIA@EXAMPLE.COM",
                            NormalizedUserName = "MIA@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4d55a6f0-a236-4710-a7f3-a4729fca5f7c",
                            TwoFactorEnabled = false,
                            UserName = "mia@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-000e-4a1a-8000-00000000000e",
                            AccessFailedCount = 0,
                            Address = "14 Mountain Base",
                            ConcurrencyStamp = "f00d2552-2f4c-48a3-bc2c-0750355176cc",
                            DateOfBirth = new DateTime(1989, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "noah@example.com",
                            EmailConfirmed = true,
                            FirstName = "Noah",
                            IsSuspended = false,
                            LastName = "Nilsen",
                            LockoutEnabled = false,
                            NormalizedEmail = "NOAH@EXAMPLE.COM",
                            NormalizedUserName = "NOAH@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "232dcd15-3026-46fd-9134-df0c6969b308",
                            TwoFactorEnabled = false,
                            UserName = "noah@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-000f-4a1a-8000-00000000000f",
                            AccessFailedCount = 0,
                            Address = "15 Valley Hub",
                            ConcurrencyStamp = "535d18ef-61bd-4b0d-a09e-630addf57a83",
                            DateOfBirth = new DateTime(1978, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "olga@example.com",
                            EmailConfirmed = true,
                            FirstName = "Olga",
                            IsSuspended = false,
                            LastName = "Olsen",
                            LockoutEnabled = false,
                            NormalizedEmail = "OLGA@EXAMPLE.COM",
                            NormalizedUserName = "OLGA@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5bb75e88-38a5-4eca-9e95-f575829d73a3",
                            TwoFactorEnabled = false,
                            UserName = "olga@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-0010-4a1a-8000-000000000010",
                            AccessFailedCount = 0,
                            Address = "16 Seafront",
                            ConcurrencyStamp = "0c35b6e2-f66b-4312-952f-00d56c8b3eb0",
                            DateOfBirth = new DateTime(1984, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pete@example.com",
                            EmailConfirmed = true,
                            FirstName = "Pete",
                            IsSuspended = false,
                            LastName = "Peterson",
                            LockoutEnabled = false,
                            NormalizedEmail = "PETE@EXAMPLE.COM",
                            NormalizedUserName = "PETE@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a2698a72-7028-47a2-adce-fde0b5f1738e",
                            TwoFactorEnabled = false,
                            UserName = "pete@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-0011-4a1a-8000-000000000011",
                            AccessFailedCount = 0,
                            Address = "17 Meadow Park",
                            ConcurrencyStamp = "f64406f6-eef3-4646-a329-87f628e34c21",
                            DateOfBirth = new DateTime(1999, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quinn@example.com",
                            EmailConfirmed = true,
                            FirstName = "Quinn",
                            IsSuspended = false,
                            LastName = "Qvist",
                            LockoutEnabled = false,
                            NormalizedEmail = "QUINN@EXAMPLE.COM",
                            NormalizedUserName = "QUINN@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c03ba5ab-b0ab-435b-a20f-7d3c48bf6676",
                            TwoFactorEnabled = false,
                            UserName = "quinn@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-0012-4a1a-8000-000000000012",
                            AccessFailedCount = 0,
                            Address = "18 Station Square",
                            ConcurrencyStamp = "62770e6f-5121-448d-8b84-2532783017e0",
                            DateOfBirth = new DateTime(1997, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rachel@example.com",
                            EmailConfirmed = true,
                            FirstName = "Rachel",
                            IsSuspended = false,
                            LastName = "Rosen",
                            LockoutEnabled = false,
                            NormalizedEmail = "RACHEL@EXAMPLE.COM",
                            NormalizedUserName = "RACHEL@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2a2e727d-0a20-454a-b31e-379feb283c12",
                            TwoFactorEnabled = false,
                            UserName = "rachel@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-0013-4a1a-8000-000000000013",
                            AccessFailedCount = 0,
                            Address = "19 Festival Grounds",
                            ConcurrencyStamp = "c47a6087-dae4-40ac-9ae7-4131ffe9bd6e",
                            DateOfBirth = new DateTime(1990, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sam@example.com",
                            EmailConfirmed = true,
                            FirstName = "Sam",
                            IsSuspended = false,
                            LastName = "Svensson",
                            LockoutEnabled = false,
                            NormalizedEmail = "SAM@EXAMPLE.COM",
                            NormalizedUserName = "SAM@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "895a8f78-bea8-4e1d-9785-902adc5e0b1c",
                            TwoFactorEnabled = false,
                            UserName = "sam@example.com"
                        },
                        new
                        {
                            Id = "b1f4f730-0014-4a1a-8000-000000000014",
                            AccessFailedCount = 0,
                            Address = "20 Civic Plaza",
                            ConcurrencyStamp = "8ea4ef0f-0879-4b07-993f-97c7767c43ba",
                            DateOfBirth = new DateTime(1983, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tina@example.com",
                            EmailConfirmed = true,
                            FirstName = "Tina",
                            IsSuspended = false,
                            LastName = "Thompson",
                            LockoutEnabled = false,
                            NormalizedEmail = "TINA@EXAMPLE.COM",
                            NormalizedUserName = "TINA@EXAMPLE.COM",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d1860db8-a592-44a4-87c4-66ea08100ce8",
                            TwoFactorEnabled = false,
                            UserName = "tina@example.com"
                        });
                });

            modelBuilder.Entity("ActivitySubLocation", b =>
                {
                    b.Property<int>("ActivitiesId")
                        .HasColumnType("int");

                    b.Property<int>("SubLocationsId")
                        .HasColumnType("int");

                    b.HasKey("ActivitiesId", "SubLocationsId");

                    b.HasIndex("SubLocationsId");

                    b.ToTable("ActivitySubLocation");
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.Activity", b =>
                {
                    b.HasOne("ActiviGoApi.Core.Models.Category", "Category")
                        .WithMany("Activities")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.ActivityOccurence", b =>
                {
                    b.HasOne("ActiviGoApi.Core.Models.Activity", "Activity")
                        .WithMany("ActivityOccurrences")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActiviGoApi.Core.Models.SubLocation", "SubLocation")
                        .WithMany("ActivityOccurences")
                        .HasForeignKey("SubLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("SubLocation");
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.Booking", b =>
                {
                    b.HasOne("ActiviGoApi.Core.Models.ActivityOccurence", "ActivityOccurence")
                        .WithMany("Bookings")
                        .HasForeignKey("ActivityOccurenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActiviGoApi.Core.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityOccurence");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.SubLocation", b =>
                {
                    b.HasOne("ActiviGoApi.Core.Models.Location", "Location")
                        .WithMany("SubLocations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ActivitySubLocation", b =>
                {
                    b.HasOne("ActiviGoApi.Core.Models.Activity", null)
                        .WithMany()
                        .HasForeignKey("ActivitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActiviGoApi.Core.Models.SubLocation", null)
                        .WithMany()
                        .HasForeignKey("SubLocationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.Activity", b =>
                {
                    b.Navigation("ActivityOccurrences");
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.ActivityOccurence", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.Category", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.Location", b =>
                {
                    b.Navigation("SubLocations");
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.SubLocation", b =>
                {
                    b.Navigation("ActivityOccurences");
                });

            modelBuilder.Entity("ActiviGoApi.Core.Models.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
